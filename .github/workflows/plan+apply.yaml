name: 'Run Terraform Complete'

on:
  workflow_dispatch:
  #push:
  #  branches:
  #  - main
  #pull_request:
  #  branches:
  #  - main

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  
jobs:

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    #environment: production
    env: 
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      
    # Terraform Plan
    - name: Terraform Plan
      run: terraform plan

  wait-for-approval:
      needs: terraform-plan
      runs-on: ubuntu-latest
      environment: production
      steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

  terraform-apply:
      needs: wait-for-approval
      name: 'Terraform Apply'
      runs-on: ubuntu-latest
      #environment: production
      env:
          #this is needed since we are running terraform with read-only permissions
          ARM_SKIP_PROVIDER_REGISTRATION: true
      outputs:
          tfapplyExitCode: ${{ steps.tf-apply.outputs.exitcode }}
          #needs: [terraform-plan]
      
      steps:
          # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
      # Install the latest version of the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve
